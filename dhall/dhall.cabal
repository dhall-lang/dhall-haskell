Cabal-Version: 2.4
Name: dhall
Version: 1.42.1
Build-Type: Simple
License: BSD-3-Clause
License-File: LICENSE
Copyright: 2017 Gabriella Gonzalez
Author: Gabriella Gonzalez
Maintainer: GenuineGabriella@gmail.com
Bug-Reports: https://github.com/dhall-lang/dhall-haskell/issues
Synopsis: A configuration language guaranteed to terminate
Description:
    Dhall is an explicitly typed configuration language that is not Turing
    complete.  Despite being Turing incomplete, Dhall is a real programming
    language with a type-checker and evaluator.
    .
    Use this library to parse, type-check, evaluate, and pretty-print the Dhall
    configuration language.  This package also includes an executable which
    type-checks a Dhall file and reduces the file to a fully evaluated normal
    form.
    .
    Read "Dhall.Tutorial" to learn how to use this library
Category: Compiler
Data-Files:
    man/dhall.1
Extra-Source-Files:
    CHANGELOG.md
    benchmark/**/*.dhall
    dhall-lang/Prelude/**/*.dhall
    dhall-lang/Prelude/Bool/and
    dhall-lang/Prelude/Bool/build
    dhall-lang/Prelude/Bool/even
    dhall-lang/Prelude/Bool/fold
    dhall-lang/Prelude/Bool/not
    dhall-lang/Prelude/Bool/odd
    dhall-lang/Prelude/Bool/or
    dhall-lang/Prelude/Bool/show
    dhall-lang/Prelude/Double/show
    dhall-lang/Prelude/Function/compose
    dhall-lang/Prelude/Function/identity
    dhall-lang/Prelude/Integer/abs
    dhall-lang/Prelude/Integer/add
    dhall-lang/Prelude/Integer/clamp
    dhall-lang/Prelude/Integer/equal
    dhall-lang/Prelude/Integer/greaterThan
    dhall-lang/Prelude/Integer/greaterThanEqual
    dhall-lang/Prelude/Integer/lessThan
    dhall-lang/Prelude/Integer/lessThanEqual
    dhall-lang/Prelude/Integer/multiply
    dhall-lang/Prelude/Integer/negate
    dhall-lang/Prelude/Integer/negative
    dhall-lang/Prelude/Integer/nonNegative
    dhall-lang/Prelude/Integer/nonPositive
    dhall-lang/Prelude/Integer/positive
    dhall-lang/Prelude/Integer/show
    dhall-lang/Prelude/Integer/subtract
    dhall-lang/Prelude/Integer/toDouble
    dhall-lang/Prelude/Integer/toNatural
    dhall-lang/Prelude/JSON/Format
    dhall-lang/Prelude/JSON/Nesting
    dhall-lang/Prelude/JSON/Tagged
    dhall-lang/Prelude/JSON/Type
    dhall-lang/Prelude/JSON/array
    dhall-lang/Prelude/JSON/bool
    dhall-lang/Prelude/JSON/double
    dhall-lang/Prelude/JSON/integer
    dhall-lang/Prelude/JSON/keyText
    dhall-lang/Prelude/JSON/keyValue
    dhall-lang/Prelude/JSON/natural
    dhall-lang/Prelude/JSON/null
    dhall-lang/Prelude/JSON/number
    dhall-lang/Prelude/JSON/object
    dhall-lang/Prelude/JSON/omitNullFields
    dhall-lang/Prelude/JSON/render
    dhall-lang/Prelude/JSON/renderAs
    dhall-lang/Prelude/JSON/renderYAML
    dhall-lang/Prelude/JSON/string
    dhall-lang/Prelude/JSON/tagInline
    dhall-lang/Prelude/JSON/tagNested
    dhall-lang/Prelude/List/all
    dhall-lang/Prelude/List/any
    dhall-lang/Prelude/List/build
    dhall-lang/Prelude/List/concat
    dhall-lang/Prelude/List/concatMap
    dhall-lang/Prelude/List/default
    dhall-lang/Prelude/List/drop
    dhall-lang/Prelude/List/empty
    dhall-lang/Prelude/List/filter
    dhall-lang/Prelude/List/fold
    dhall-lang/Prelude/List/generate
    dhall-lang/Prelude/List/head
    dhall-lang/Prelude/List/index
    dhall-lang/Prelude/List/indexed
    dhall-lang/Prelude/List/iterate
    dhall-lang/Prelude/List/last
    dhall-lang/Prelude/List/length
    dhall-lang/Prelude/List/map
    dhall-lang/Prelude/List/null
    dhall-lang/Prelude/List/partition
    dhall-lang/Prelude/List/replicate
    dhall-lang/Prelude/List/reverse
    dhall-lang/Prelude/List/shifted
    dhall-lang/Prelude/List/take
    dhall-lang/Prelude/List/unpackOptionals
    dhall-lang/Prelude/List/unzip
    dhall-lang/Prelude/List/zip
    dhall-lang/Prelude/Location/Type
    dhall-lang/Prelude/Map/Entry
    dhall-lang/Prelude/Map/Type
    dhall-lang/Prelude/Map/empty
    dhall-lang/Prelude/Map/keyText
    dhall-lang/Prelude/Map/keyValue
    dhall-lang/Prelude/Map/keys
    dhall-lang/Prelude/Map/map
    dhall-lang/Prelude/Map/values
    dhall-lang/Prelude/Monoid
    dhall-lang/Prelude/Natural/build
    dhall-lang/Prelude/Natural/enumerate
    dhall-lang/Prelude/Natural/equal
    dhall-lang/Prelude/Natural/even
    dhall-lang/Prelude/Natural/fold
    dhall-lang/Prelude/Natural/greaterThan
    dhall-lang/Prelude/Natural/greaterThanEqual
    dhall-lang/Prelude/Natural/isZero
    dhall-lang/Prelude/Natural/lessThan
    dhall-lang/Prelude/Natural/lessThanEqual
    dhall-lang/Prelude/Natural/listMax
    dhall-lang/Prelude/Natural/listMin
    dhall-lang/Prelude/Natural/max
    dhall-lang/Prelude/Natural/min
    dhall-lang/Prelude/Natural/odd
    dhall-lang/Prelude/Natural/product
    dhall-lang/Prelude/Natural/show
    dhall-lang/Prelude/Natural/sort
    dhall-lang/Prelude/Natural/subtract
    dhall-lang/Prelude/Natural/sum
    dhall-lang/Prelude/Natural/toDouble
    dhall-lang/Prelude/Natural/toInteger
    dhall-lang/Prelude/Optional/all
    dhall-lang/Prelude/Optional/any
    dhall-lang/Prelude/Optional/build
    dhall-lang/Prelude/Optional/concat
    dhall-lang/Prelude/Optional/default
    dhall-lang/Prelude/Optional/filter
    dhall-lang/Prelude/Optional/fold
    dhall-lang/Prelude/Optional/head
    dhall-lang/Prelude/Optional/last
    dhall-lang/Prelude/Optional/length
    dhall-lang/Prelude/Optional/map
    dhall-lang/Prelude/Optional/null
    dhall-lang/Prelude/Optional/toList
    dhall-lang/Prelude/Optional/unzip
    dhall-lang/Prelude/Text/concat
    dhall-lang/Prelude/Text/concatMap
    dhall-lang/Prelude/Text/concatMapSep
    dhall-lang/Prelude/Text/concatSep
    dhall-lang/Prelude/Text/default
    dhall-lang/Prelude/Text/defaultMap
    dhall-lang/Prelude/Text/replicate
    dhall-lang/Prelude/Text/show
    dhall-lang/Prelude/Text/spaces
    dhall-lang/Prelude/XML/Type
    dhall-lang/Prelude/XML/attribute
    dhall-lang/Prelude/XML/element
    dhall-lang/Prelude/XML/emptyAttributes
    dhall-lang/Prelude/XML/leaf
    dhall-lang/Prelude/XML/render
    dhall-lang/Prelude/XML/text
    dhall-lang/tests/**/*.dhall
    dhall-lang/tests/**/*.dhallb
    dhall-lang/tests/**/*.hash
    dhall-lang/tests/**/*.txt
    dhall-lang/tests/**/*.bin
    dhall-lang/tests/import/cache/dhall/12203871180b87ecaba8b53fffb2a8b52d3fce98098fab09a6f759358b9e8042eedc
    dhall-lang/tests/import/cache/dhall/1220618f785ce8f3930a9144398f576f0a992544b51212bc9108c31b4e670dc6ed21
    tests/**/*.dhall
    tests/**/*.tags
    tests/**/*.txt

Source-Repository head
    Type: git
    Location: https://github.com/dhall-lang/dhall-haskell/tree/master/dhall

Flag with-http
  Description: Include support for importing dhall modules from HTTP URLs
  Default:     True
  Manual:      True

Flag use-http-client-tls
  Description: Use http-client-tls for resolving HTTP imports by default
               (requires with-http to be enabled)
  Default:     True
  Manual:      True

Flag cross
  Description: Disable TemplateHaskell to make cross-compiling easier
  Default:     False
  Manual:      True

Flag network-tests
  Description: Enable tests which depend on an internet connection
  Default:     True
  Manual:      True

Common common
    Build-Depends:
        base                        >= 4.11.0.0 && < 5   ,
        aeson                       >= 1.0.0.0  && < 2.3 ,
        aeson-pretty                               < 0.9 ,
        ansi-terminal               >= 0.6.3.1  && < 1.1 ,
        atomic-write                >= 0.2.0.7  && < 0.3 ,
        base16-bytestring           >= 1.0.0.0           ,
        bytestring                                 < 0.13,
        case-insensitive                           < 1.3 ,
        cborg                       >= 0.2.0.0  && < 0.3 ,
        cborg-json                  >= 0.2.2.0  && < 0.3 ,
        containers                  >= 0.5.8.0  && < 0.7 ,
        contravariant                              < 1.6 ,
        data-fix                                   < 0.4 ,
        deepseq                                    < 1.6 ,
        Diff                        >= 0.2      && < 0.5 ,
        directory                   >= 1.3.0.0  && < 1.4 ,
        dotgen                      >= 0.4.2    && < 0.5 ,
        either                      >= 5        && < 5.1,
        exceptions                  >= 0.8.3    && < 0.11,
        filepath                    >= 1.4      && < 1.5 ,
        half                        >= 0.2.2.3  && < 0.4 ,
        haskeline                   >= 0.7.2.1  && < 0.9 ,
        hashable                    >= 1.2      && < 1.5 ,
        indexed-traversable                        < 0.2 ,
        lens-family-core            >= 1.0.0    && < 2.2 ,
        -- megaparsec follows SemVer: https://github.com/mrkkrp/megaparsec/issues/469#issuecomment-927918469
        megaparsec                  >= 8        && < 10  ,
        mmorph                                     < 1.3 ,
        mtl                         >= 2.2.1    && < 2.4 ,
        network-uri                 >= 2.6      && < 2.7 ,
        optparse-applicative        >= 0.14.0.0 && < 0.19,
        parsers                     >= 0.12.4   && < 0.13,
        parser-combinators                               ,
        prettyprinter               >= 1.7.0    && < 1.8 ,
        prettyprinter-ansi-terminal >= 1.1.2    && < 1.2 ,
        pretty-simple                              < 4.2 ,
        profunctors                 >= 3.1.2    && < 5.7 ,
        repline                     >= 0.4.0.0  && < 0.5 ,
        serialise                   >= 0.2.0.0  && < 0.3 ,
        scientific                  >= 0.3.0.0  && < 0.4 ,
        template-haskell            >= 2.13.0.0 && < 2.22,
        text                        >= 0.11.1.0 && < 2.2 ,
        text-manipulate             >= 0.2.0.1  && < 0.4 ,
        text-short                  >= 0.1      && < 0.2 ,
        th-lift-instances           >= 0.1.13   && < 0.2 ,
        time                        >= 1.9      && < 1.13,
        transformers                >= 0.5.2.0  && < 0.7 ,
        unix-compat                 >= 0.4.2    && < 0.8 ,
        unordered-containers        >= 0.1.3.0  && < 0.3 ,
        vector                      >= 0.11.0.0 && < 0.14

    if !os(windows)
      Build-Depends:
        unix                        >= 2.7      && < 2.9 ,

    if flag(with-http)
      CPP-Options:
        -DWITH_HTTP
      if flag(use-http-client-tls)
        CPP-Options:
          -DUSE_HTTP_CLIENT_TLS
      if flag(network-tests)
        CPP-Options:
          -DNETWORK_TESTS

    GHC-Options: -Wall -Wcompat -Wincomplete-uni-patterns

Library
    Import: common
    Hs-Source-Dirs: src
    if impl(ghcjs)
      Hs-Source-Dirs: ghcjs-src
      Build-Depends:
        ghcjs-base ,
        ghcjs-xhr
    else
      Hs-Source-Dirs: ghc-src
      Build-Depends:
        cryptohash-sha256
      if flag(with-http)
        Build-Depends:
          http-types                  >= 0.7.0    && < 0.13,
          http-client                 >= 0.5.0    && < 0.8
        if flag(use-http-client-tls)
          Build-Depends:
            http-client-tls           >= 0.2.0    && < 0.4

    Other-Extensions:
        BangPatterns
        CPP
        DefaultSignatures
        DeriveAnyClass
        DeriveDataTypeable
        DeriveFunctor
        DeriveGeneric
        DeriveTraversable
        FlexibleContexts
        FlexibleInstances
        GeneralizedNewtypeDeriving
        MultiParamTypeClasses
        NamedFieldPuns
        OverloadedLists
        OverloadedStrings
        RankNTypes
        RecordWildCards
        ScopedTypeVariables
        StandaloneDeriving
        TupleSections
        TypeFamilies
        TypeOperators
        UnicodeSyntax
    if !flag(cross)
        Other-Extensions:
            TemplateHaskell

    Exposed-Modules:
        Dhall
        Dhall.Binary
        Dhall.Context
        Dhall.Core
        Dhall.Crypto
        Dhall.Diff
        Dhall.DirectoryTree
        Dhall.Format
        Dhall.Freeze
        Dhall.Import
        Dhall.Lint
        Dhall.Main
        Dhall.Marshal.Decode
        Dhall.Marshal.Encode
        Dhall.Map
        Dhall.Optics
        Dhall.Package
        Dhall.Parser
        Dhall.Parser.Expression
        Dhall.Parser.Token
        Dhall.Pretty
        Dhall.Repl
        Dhall.Schemas
        Dhall.Set
        Dhall.Src
        Dhall.Substitution
        Dhall.Tags
        Dhall.Tutorial
        Dhall.TypeCheck
        Dhall.Util
        Dhall.Version
    if !flag(cross)
        Exposed-Modules:
            Dhall.TH
    if impl(ghc >= 8.6.1)
        Exposed-Modules:
          Dhall.Deriving
    Other-Modules:
        Dhall.DirectoryTree.Types
        Dhall.Eval
        Dhall.Import.Types
        Dhall.Import.Headers
        Dhall.Marshal.Internal
        Dhall.Normalize
        Dhall.Parser.Combinators
        Dhall.Pretty.Internal
        Dhall.Syntax
        Dhall.Syntax.Binding
        Dhall.Syntax.Chunks
        Dhall.Syntax.Const
        Dhall.Syntax.Expr
        Dhall.Syntax.FunctionBinding
        Dhall.Syntax.Import
        Dhall.Syntax.Instances.Applicative
        Dhall.Syntax.Instances.Bifunctor
        Dhall.Syntax.Instances.Data
        Dhall.Syntax.Instances.Eq
        Dhall.Syntax.Instances.Foldable
        Dhall.Syntax.Instances.Functor
        Dhall.Syntax.Instances.Lift
        Dhall.Syntax.Instances.Monad
        Dhall.Syntax.Instances.NFData
        Dhall.Syntax.Instances.Ord
        Dhall.Syntax.Instances.Pretty
        Dhall.Syntax.Instances.Show
        Dhall.Syntax.Instances.Traversable
        Dhall.Syntax.MultiLet
        Dhall.Syntax.Operations
        Dhall.Syntax.RecordField
        Dhall.Syntax.Types
        Dhall.Syntax.Var
        Dhall.URL
        Paths_dhall
    Autogen-Modules:
        Paths_dhall
    if flag(with-http)
      Other-Modules:
        Dhall.Import.HTTP
        Dhall.Import.Manager

    Default-Language: Haskell2010

Executable dhall
    Import: common
    Hs-Source-Dirs: dhall
    Main-Is: Main.hs
    Build-Depends: dhall
    GHC-Options: -rtsopts
    Default-Language: Haskell2010

Test-Suite tasty
    Import: common
    Type: exitcode-stdio-1.0
    Hs-Source-Dirs: tests
    Main-Is: Dhall/Test/Main.hs
    Other-Modules:
        Dhall.Test.Dhall
        Dhall.Test.Diff
        Dhall.Test.DirectoryTree
        Dhall.Test.Tags
        Dhall.Test.Format
        Dhall.Test.Freeze
        Dhall.Test.Import
        Dhall.Test.Lint
        Dhall.Test.Normalization
        Dhall.Test.Package
        Dhall.Test.Parser
        Dhall.Test.QuickCheck
        Dhall.Test.Regression
        Dhall.Test.Schemas
        Dhall.Test.SemanticHash
        Dhall.Test.Substitution
        Dhall.Test.TH
        Dhall.Test.Tutorial
        Dhall.Test.TypeInference
        Dhall.Test.Util
    Build-Depends:
        dhall                                          ,
        foldl                                    < 1.5 ,
        generic-random            >= 1.3.0.0  && < 1.6 ,
        http-client                                    ,
        http-client-tls                                ,
        QuickCheck                >= 2.14     && < 2.15,
        quickcheck-instances      >= 0.3.12   && < 0.4 ,
        special-values                           < 0.2 ,
        spoon                                    < 0.4 ,
        tasty                     >= 0.11.2   && < 1.5 ,
        tasty-expected-failure                   < 0.13,
        tasty-hunit               >= 0.10     && < 0.11,
        tasty-quickcheck          >= 0.9.2    && < 0.11,
        tasty-silver                             < 3.4 ,
        temporary                 >= 1.2.1    && < 1.4 ,
        turtle                                   < 1.7 ,
    Default-Language: Haskell2010

Test-Suite doctest
    Import: common
    Type: exitcode-stdio-1.0
    Hs-Source-Dirs: doctest
    Main-Is: Main.hs
    Build-Depends:
        mockery                 < 0.4 ,
        doctest   >= 0.7.0
    if os(windows)
      -- https://github.com/dhall-lang/dhall-haskell/issues/2237
      Buildable: False
    Default-Language: Haskell2010

Benchmark dhall-parser
    Import: common
    Type: exitcode-stdio-1.0
    Hs-Source-Dirs: benchmark/parser
    Main-Is: Main.hs
    Build-Depends:
        dhall                                         ,
        gauge                     >= 0.2.3    && < 0.3,
    Default-Language: Haskell2010
    Other-Extensions:
        TypeApplications
    Ghc-Options: -rtsopts

Benchmark deep-nested-large-record
    Import: common
    Type: exitcode-stdio-1.0
    Hs-Source-Dirs: benchmark/deep-nested-large-record
    Main-Is: Main.hs
    Build-Depends:
        dhall                                         ,
        gauge                     >= 0.2.3    && < 0.3
    Default-Language: Haskell2010
